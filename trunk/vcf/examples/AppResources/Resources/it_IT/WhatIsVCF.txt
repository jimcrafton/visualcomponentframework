La 'Visual Component Framework' ( Infrastruttura Visuale a Componenti ) e' un infrastruttura di applicazione che offre un'architettura in C++ moderna, chiara e progettata per essere multipiattaforma. L'ossatura di questa infrastruttura e' divisa in tre librerie principali il FoundationKit ( il kit fondamentale), il GraphicsKit ( il kit grafico ) e l'ApplicationKit ( il kit di applicazione ). Il FoundationKit fornisce servizi di base quali l'accesso ai file, gli 'streams', i threads e le primitive di sincronizzazione, e capacita' avanzate di RTTI. Il GraphicsKit provvede un utile insieme di classi per lavorare con immagini vettoriali e non, ed ha un supporto per la libreria grafica Anti-Grain (AGG), come pure servizi per facilitare il caricamento di immagini in vari formati grafici. L'ApplicationKit provvede infine un insieme assai ricco di controlli GUI ( interfaccia grafica per l'utente ), l'uso di modelli ( pattern ) Modello-Vista-Controllo, di editors ( editatori ) di proprieta' e componenti, il supporto per undo/redo (annulla modifiche / ripeti modifiche ), drag and drop, servizi di clipboard, risorse di applicazione, e gestori di interfaccia metriche e 'policy'.

Per facilitare la funzionalita' multipiattaforma, la libreria VCF e' costruita unsando un sistema di interfacce 'peer' che astraggono le varie chiamate di sistema specifiche delle varie piattaforme, dove ogni 'peer' si occupa di un servizio di sistema specifico come il multi-threading, la gestione di files, il sistema di controllo delle finestre, e cosi via. Queste classi di 'peers' sono pure 'esposti', cosicche' possono essere utilizzati per accedere agli 'handles' o alle primitive di basso livello che essi rappresentano, permettendo cosi' al programmatore di scrivere codice specifico per la piattaforma se succede di averne la necessita'.

Infine la libreria VCF e' flessibile. Mentre e' certamente disegnata per essere un 'infrastruttura autonoma, essa cerca allo stesso tempo di poter cooperare il piu' possibile con altri 'toolkits' o infrastrutture esistenti. Per esempio se avete un' applicazione MFC, voi potrete facilmente usare solamente il GraphicsKit per poter utilizzarne le capacita' grafiche piu' avanzate invece di impiegare le classi di disegno MFC qulai CDC, CBrush e CPen.