#ifndef _VCF_COMMONFILEDIALOG_H__
#define _VCF_COMMONFILEDIALOG_H__
//CommonFileDialog.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */





namespace VCF {

class CommonFileDialogPeer;


class APPLICATIONKIT_API CommonFileDialog : public CommonDialog {

public:
	CommonFileDialog();

	virtual ~CommonFileDialog();

	/**
	* adds a filter to the File dialog.
	* This is composed of the filter name or description
	* and its associated extension(s).
	*@param const String& description, the description or name of the filter.
	*@param const String& extension, the extension associated to the filter.
	* This may be a list of extensions separated by a semicolon ( under windows )
	* or any other separator depending on the OS. The dialog will display only
	* the files with any extension existing in this string list.
	*/
	virtual void addFilter( const String & description, const String & extension );

	/**
	* sets the default directory whose files will be displayed in the dialog.
	*@param const String& directory, the displayed directory.
	*/
	virtual void setDirectory( const String & directory );

	/**
	* sets the default filename suggested by the dialog.
	* This may include the directory set for the dialog.
	*@param const String& filename, the default displayed filename.
	*/
	virtual void setFileName( const String & filename );

	/**
	* gets the directory chosen with the dialog.
	*@return String, the chosen directory.
	*/
	virtual String getDirectory();

	/**
	* gets the filename chosen with the dialog.
	* This includes the path to the directory chosen with the dialog.
	*@return String, the filename chosen by the user.
	*/
	virtual String getFileName();

	/**
	* gets the filter's extension chosen with the dialog.
	*@return String, the filter's extension chosen by the user.
	*/
	virtual String getFileExtension();

	/**
	* gets the filter selected the previous time this dialog has been openened.
	* If the filters are composed by pairs of strings ( the filter's name 
	* and the associated extension ), the given string is the first string
	* of the selected pair.
	*/
	virtual String getSelectedFilter();

	/**
	* sets the default selected filter for the dialog
	* The value to be set is usually the one selected the previous time 
	* the dialog has been openened.
	*@param const String& selectedFilter, the default filter to be used.
	*/
	void setSelectedFilter( const String& selectedFilter );

	/**
	* sets the flags allowing multiple selection of the items in the dialog.
	*@param const bool& allowsMultiSelect, true if allowed.
	*/
	virtual void setAllowsMultiSelect( const bool& allowsMultiSelect );

	/**
	* sets the title of the dialog.
	*@param const String& title, the title.
	*/
	virtual void setTitle( const String& title );

protected:
	/**
	* the pointer to the peer for the OS specific implementation 
	* of the File dialog.
	*/
	CommonFileDialogPeer* peer_;

};

} // namespace VCF


/**
*CVS Log info
*$Log$
*Revision 1.3  2005/07/09 23:14:52  ddiego
*merging in changes from devmain-0-6-7 branch.
*
*Revision 1.2.4.1  2005/04/09 17:20:35  marcelloptr
*bugfix [ 1179853 ] memory fixes around memset. Documentation. DocumentManager::saveAs and DocumentManager::reload
*
*Revision 1.2  2004/08/07 02:49:06  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.3  2004/06/06 07:05:29  marcelloptr
*changed macros, text reformatting, copyright sections
*
*Revision 1.1.2.2  2004/04/29 03:43:12  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:15  ddiego
*migration towards new directory structure
*
*Revision 1.9.4.1  2004/04/26 21:58:18  marcelloptr
*changes for dir reorganization: _VCF_MACRO_H__
*
*Revision 1.9  2003/12/18 05:15:56  ddiego
*merge from devmain-0-6-2 branch into the stable branch
*
*Revision 1.8.2.2  2003/09/17 03:27:56  ddiego
*added a fix for bug [ 807416 ] CommonFileDialog needs setFileExtension
*added methods for getting data from the open and save dialogs in the
*DocumentManager
*
*Revision 1.8.2.1  2003/09/12 00:09:32  ddiego
*added better tabbing behaviour - fixed an earlier bug.
*Code is easier to understand and it simplified the implementation
*a bit as well
*Moved around the RTTI definitions for various Appkit classes to a
*single inline and stripped them from the various class headers
*
*Revision 1.8  2003/08/09 02:56:42  ddiego
*merge over from the devmain-0-6-1 branch
*Changes
*Features:
*-Added additional implementation to better support the MVC architecture in
*the VCF
*
*-Added a Document/View architecure that is similar to MFC's or NextSteps's
*Doc/View architectures
*
*-Integrated the Anti Grain Graphics library into the GraphicsKit. There is
*now basic support for it in terms of drawing vector shapes
*(fills and strokes). Image support will come in the next release
*
*-Added several documented graphics tutorials
*
*Bugfixes:
*
*[ 775744 ] wrong buttons on a dialog
*[ 585239 ] Painting weirdness in a modal dialog ?
*[ 585238 ] Modal dialog which makes a modal Dialog
*[ 509004 ] Opening a modal Dialog causes flicker
*[ 524878 ] onDropped not called for MLTcontrol
*
*Plus an issue with some focus and getting the right popup window to activate
*has also been fixed
*
*Revision 1.7.2.1  2003/06/30 02:53:15  ddiego
*Allow getting the selected filter from a CommonFileDialog
*Added a quitCurrentEventLoop to the UIToolkit to allow programatic
*termination of a program if there is no main window specified
*added a getTag method to the Item class
*
*Revision 1.7  2003/05/17 20:37:01  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.6.2.2  2003/03/23 03:23:45  marcelloptr
*3 empty lines at the end of the files
*
*Revision 1.6.2.1  2003/03/12 03:09:22  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.6  2003/02/26 04:30:37  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.5.20.1  2002/12/25 22:06:16  ddiego
*whole bunch of little changes to the header files used by the ApplicationKit
*to get rid of no newline warnings by gcc.
*fixes to various event handlers in the ApplicationKit to compile with gcc
*since gcc does not like a member function pointer without the "&"
*addressof operator.
*Added initial file for the X11 UIToolkit implementation
*
*Revision 1.5  2002/01/24 01:46:47  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


#endif // _VCF_COMMONFILEDIALOG_H__


