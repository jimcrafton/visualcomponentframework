#ifndef _VCF_TABBEDPAGES_H__
#define _VCF_TABBEDPAGES_H__
//TabbedPages.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */


#ifndef _VCF_TABMODEL_H__
#	include "vcf/ApplicationKit/TabModel.h"
#endif // _VCF_TABMODEL_H__

#ifndef _VCF_TABPAGE_H__
#	include "vcf/ApplicationKit/TabPage.h"
#endif // _VCF_TABPAGE_H__

#ifndef _VCF_TABMODELEVENT_H__
#	include "vcf/ApplicationKit/TabModelEvent.h"
#endif // _VCF_TABMODELEVENT_H__



#ifndef _VCF_PUSHBUTTON_H__
#	include "vcf/ApplicationKit/PushButton.h"
#endif // _VCF_PUSHBUTTON_H__



namespace VCF  {

#define TABBEDPAGES_CLASSID		"4A9D66D6-3B26-11d4-B54C-00C04F0196DA"

/**
\class TabbedPages TabbedPages.h "vcf/ApplicationKit/TabbedPages.h"
*/
class APPLICATIONKIT_API TabbedPages : public CustomControl, public DelegatedContainer<TabbedPages> {
public:

	TabbedPages();
	virtual ~TabbedPages();

	void init();

	virtual void paint( GraphicsContext* context );

	TabModel* getModel();

	void setTabModel( TabModel* model );

	void onTabPageAdded( TabModelEvent* event );

	void onTabPageRemoved( TabModelEvent* event );

	void onTabPageSelected( TabModelEvent* event );

	TabPage* addNewPage( const String& caption );

	virtual Rect getClientBounds( const bool& includeBorder=true );
	//virtual void resizeChildren();

	virtual void mouseDown( MouseEvent* event );

	virtual void mouseMove( MouseEvent* event );

	virtual void mouseUp( MouseEvent* event );

	double getBorderWidth();

	void setBorderWidth( const double& borderWidth );

	double getTabHeight();

	void setTabHeight( const double& tabHeight );

protected:
	class ScrollButton : public PushButton {
	public:
		virtual void paint( GraphicsContext* ctx );
	};

	TabModel* model_;
	Rect tabAreaBounds_;
	Basic3DBorder activePageBorder_;
	double borderWidth_;
	double tabHeight_;
	//this is to move the whole tab section forwards or backwards when
	//the scroll buttons are clicked
	double tabViewOffset_;
	ScrollButton* scrollForward_;
	ScrollButton* scrollBackward_;

	//void recalcScrollerButtonsPos();

	double getTabPageWidth( TabPage* page, GraphicsContext* ctx=NULL );

	void onScrollButtonClicked( ButtonEvent* e );


};

};


#endif // _VCF_TABBEDPAGES_H__

/**
$Id$
*/
