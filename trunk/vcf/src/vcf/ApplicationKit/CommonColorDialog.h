#ifndef _VCF_COMMONCOLORDIALOG_H__
#define _VCF_COMMONCOLORDIALOG_H__
//CommonColorDialog.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */



namespace VCF{

class CommonColorDialogPeer;

class Color;

class Control;

/**
\class CommonColorDialog CommonColorDialog.h "vcf/ApplicationKit/CommonColorDialog.h"
The CommonColorDialog is used to present a standard dialog for selcting a color. 
This uses the windowing platform's standard color dialog.
*/
class APPLICATIONKIT_API CommonColorDialog : public CommonDialog {
public:

	/**
	Creates a color dialog. If the owner is NULL then the dialog is 
	non modal. If the owner is \em not NULL then the dialog is modal
	relative to the control that started it. For most cases you 
	do \em not want to pass in a NULL owner.
	*/
	CommonColorDialog( Control* owner = NULL );

	virtual ~CommonColorDialog();

	/**
	"executes" the dialog - this will cause the dialog to be displayed.
	@return bool returns true if the user succesfully chose a color, 
	otherwise false if no color was chosen, or the user canceled the 
	dialog.
	*/
	virtual bool execute();

	/**
	Returns the color the user selected.
	*/
	Color* getSelectedColor();

	/**
	Sets the selected color. This is generally called \em before the dialog 
	is displayed with the execute() function. 
	*/
	void setSelectedColor( Color* selectedColor );
private:
	CommonColorDialogPeer* peer_;
};

}


/**
*CVS Log info
*$Log$
*Revision 1.2  2006/04/07 02:35:22  ddiego
*initial checkin of merge from 0.6.9 dev branch.
*
*Revision 1.1.2.2  2006/03/14 02:25:46  ddiego
*large amounts of source docs updated.
*
*Revision 1.1.2.1  2005/09/02 01:01:20  ddiego
*changed some of the common dialogs around, was using a less clear class name.
*
*Revision 1.3  2005/07/09 23:14:52  ddiego
*merging in changes from devmain-0-6-7 branch.
*
*Revision 1.2.4.1  2005/02/21 16:20:01  ddiego
*minor changes to various things, property editors, and tree list control.
*
*Revision 1.2  2004/08/07 02:49:06  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.3  2004/06/06 07:05:29  marcelloptr
*changed macros, text reformatting, copyright sections
*
*Revision 1.1.2.2  2004/04/29 03:43:12  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:15  ddiego
*migration towards new directory structure
*
*Revision 1.8.4.1  2004/04/26 21:58:18  marcelloptr
*changes for dir reorganization: _VCF_MACRO_H__
*
*Revision 1.8  2003/12/18 05:15:56  ddiego
*merge from devmain-0-6-2 branch into the stable branch
*
*Revision 1.7.4.2  2003/09/21 04:15:34  ddiego
*moved the cvs info data to teh bottom of the header instead of the
*top so it is easier to get to the actual header class declarations
*instead of having to wade through all the cvs info stuff.
*
*Revision 1.7.4.1  2003/09/12 00:09:32  ddiego
*added better tabbing behaviour - fixed an earlier bug.
*Code is easier to understand and it simplified the implementation
*a bit as well
*Moved around the RTTI definitions for various Appkit classes to a
*single inline and stripped them from the various class headers
*
*Revision 1.7  2003/05/17 20:37:01  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.6.2.2  2003/03/23 03:23:45  marcelloptr
*3 empty lines at the end of the files
*
*Revision 1.6.2.1  2003/03/12 03:09:22  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.6  2003/02/26 04:30:37  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.5.20.1  2002/12/25 22:06:15  ddiego
*whole bunch of little changes to the header files used by the ApplicationKit
*to get rid of no newline warnings by gcc.
*fixes to various event handlers in the ApplicationKit to compile with gcc
*since gcc does not like a member function pointer without the "&"
*addressof operator.
*Added initial file for the X11 UIToolkit implementation
*
*Revision 1.5  2002/01/24 01:46:47  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


#endif // _VCF_COMMONCOLORDIALOG_H__


