#ifndef _VCF_COMMONFILEOPENDIALOG_H__
#define _VCF_COMMONFILEOPENDIALOG_H__
//CommonFileOpenDialog.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */




namespace VCF{

class Control;
/**
\class CommonFileOpenDialog CommonFileOpenDialog.h "vcf/ApplicationKit/CommonFileOpenDialog.h"
This class is used to display a common or standard file open dialog. 
*/
class APPLICATIONKIT_API CommonFileOpenDialog : public VCF::CommonFileDialog {
public:
	/**
	Creates a file open dialog. If the owner is NULL then the dialog is 
	non modal. If the owner is \em not NULL then the dialog is modal
	relative to the control that started it. For most cases you 
	do \em not want to pass in a NULL owner. You can 
	also specify the directory to start in.
	*/

	CommonFileOpenDialog( Control* owner=NULL, const String& startDir="" );

	virtual ~CommonFileOpenDialog();

	/**
	Opens the dialog used to choose the filename(s) to be opened.
	@return bool returns true if the user selected a valid filename.
	Otherwise it returns false.
	*/
	virtual bool execute();

	/**
	The dialog will accept a filename only if it exists.
	The default implementation is empty as this is used only
	with a dialog opening a file.
	@param const bool& fileMustExist, true if the typed name must
	indicate an existing file.
	*/
	virtual void setFileMustExist( const bool& fileMustExist );

	/**
	Returns a pointer to an enumerator listing
	all the files selected in the dialog.
	If the multiple selection is not allowed for the dialog, 
	then this list may be empty, but in the default implementation
	it contain the chosen filename anyway.
	@return Enumerator<String>*, the pointer to the enumerator.
	*/
	Enumerator<String>* getSelectedFiles();

protected:


};

}; // namespace VCF


#endif // _VCF_COMMONFILEOPENDIALOG_H__

/**
$Id$
*/
