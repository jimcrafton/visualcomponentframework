//MouseEvent.cpp

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


/* Generated by Together */


#include "vcf/ApplicationKit/ApplicationKit.h"


using namespace VCF;


MouseEvent::MouseEvent( Object* source ):
	Event( source )
{
	this->init();
}

MouseEvent::MouseEvent( Object* source, const unsigned long& eventType ):
	Event( source )
{
	this->init();
	this->setType( eventType );
}

MouseEvent::MouseEvent( Object* source, const unsigned long& eventType, const unsigned long& buttonMask,
					    const unsigned long& keyMask, Point* point ):
	Event( source )
{
	this->init();
	this->setType( eventType );
	this->buttonMask_ = buttonMask;
	this->keyMask_ = keyMask;
	this->point_ = *point;
}

void MouseEvent::init()
{
	point_.x_ = 0.0;
	point_.y_ = 0.0;

	this->keyMask_ = 0;
	this->buttonMask_ = 0;
}

unsigned long MouseEvent::getButtonMask()
{
	return buttonMask_;
}

unsigned long MouseEvent::getKeyMask()
{
	return keyMask_;
}

Point* MouseEvent::getPoint()
{
	return &this->point_;
}

void MouseEvent::setPoint( Point* point )
{
	this->point_.x_ = point->x_;
	this->point_.y_ = point->y_;
}

bool MouseEvent::hasLeftButton()
{
	return ( mbmLeftButton & this->buttonMask_ ) != 0;
}

bool MouseEvent::hasMiddleButton()
{
	return ( mbmMiddleButton & this->buttonMask_ ) != 0;
}

bool MouseEvent::hasRightButton()
{
	return ( mbmRightButton & this->buttonMask_ ) != 0;
}

bool MouseEvent::hasShiftKey()
{
	return ( kmShift & this->keyMask_ ) != 0;
}

bool MouseEvent::hasAltKey()
{
	return ( kmAlt & this->keyMask_ ) != 0;
}

bool MouseEvent::hasControlKey()
{
	return ( kmCtrl & this->keyMask_ ) != 0;
}


/**
*CVS Log info
*$Log$
*Revision 1.2  2004/08/07 02:49:08  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.2  2004/04/29 03:43:14  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:18  ddiego
*migration towards new directory structure
*
*Revision 1.8  2003/05/17 20:37:19  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.7.2.1  2003/03/12 03:11:56  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.7  2003/02/26 04:30:45  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.6.20.1  2003/01/08 00:19:50  marcelloptr
*mispellings and newlines at the end of all source files
*
*Revision 1.6  2002/01/24 01:46:49  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


