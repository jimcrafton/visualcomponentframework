#ifndef _VCF_TREEITEM_H__
#define _VCF_TREEITEM_H__
//TreeItem.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */




namespace VCF {

class Color;


#define TREEITEM_CLASSID		"3126B223-2819-11d4-B53A-00C04F0196DA"
/**
\class TreeItem TreeItem.h "vcf/ApplicationKit/TreeItem.h" 
*/
class APPLICATIONKIT_API TreeItem : public Item {
public:

	class APPLICATIONKIT_API SubItem : public Object {
	public:
		SubItem( TreeItem* ownerItem ) : data_(NULL){
			ownerItem_ = ownerItem;
		}

		virtual ~SubItem(){};

		void* getData() {
			return data_;
		}

		void setData( void* data ) {
			data_ = data;
			ownerItem_->subItemChanged( this );
		}

		String getCaption() {
			return caption_;
		}

		void setCaption( const String& caption ) {
			caption_ = caption;
			ownerItem_->subItemChanged( this );
		}

		virtual bool canPaint() {
			return false;
		}

		virtual void paint( GraphicsContext* context, Rect* paintRect ) {

		}

	protected:
		String caption_;
		void* data_;
		TreeItem* ownerItem_;
	};


	TreeItem(){

	};

	virtual ~TreeItem(){};

	virtual Color* getTextColor() = 0;

	virtual void setTextColor(Color* color) = 0;

	virtual void setTextBold(const bool& bold) = 0;

	virtual bool getTextBold() = 0;

	virtual bool isLeaf() = 0;

	virtual bool isRoot() = 0;

	virtual bool isExpanded() = 0;

	/* expand this tree item.
	*@param const bool& isExpanded, true if it expands, false to collapse it.
	*/
	virtual void expand( const bool& isExpanded ) = 0;

	/* expand this tree item.and all its children recursively.
	*@param const bool& isExpanded, true to expand, false to collapse.
	*/
	virtual void expandAllChildren( const bool& isExpanded ) = 0;

	virtual TreeItem* getParent() = 0;

	virtual void setParent( TreeItem* parent ) = 0;

	virtual TreeItem* getNextChildNodeItem() = 0;

	virtual TreeItem* getPrevChildNodeItem() = 0;

	virtual String getCaption() = 0;

	virtual ulong32 getLevel() = 0;

	virtual void setCaption( const String& caption ) = 0;

	virtual uint32 getChildCount() = 0;
	
	virtual Enumerator<TreeItem*>* getChildren() = 0;

	virtual void addChild( TreeItem* child ) = 0;

	virtual void insertChild( const unsigned long& index, TreeItem* child ) = 0;

	virtual void deleteChild( TreeItem* child ) = 0;

	virtual void deleteChildAtIndex( const unsigned long& index ) = 0;

	virtual void clearChildren() = 0;

	virtual long getSelectedImageIndex() = 0;

	virtual void setSelectedImageIndex( const long& selectedImageIndex ) = 0;

	virtual long getExpandedImageIndex() = 0;

	virtual void setExpandedImageIndex( const long& expandedImageIndex ) = 0;

	virtual void addSubItem( const String& caption, void* data ) = 0;

	virtual void addSubItem( SubItem* subItem ) = 0;

	virtual void removeSubItem( const ulong32& index ) = 0;

	virtual Enumerator<SubItem*>* getSubItems() = 0;

	virtual SubItem* getSubItem( const ulong32& index ) = 0;

	virtual ulong32 getSubItemCount() = 0;

	virtual void subItemChanged( SubItem* item ) = 0;
};


}; //namespace VCF


#endif // _VCF_TREEITEM_H__

/**
$Id$
*/
