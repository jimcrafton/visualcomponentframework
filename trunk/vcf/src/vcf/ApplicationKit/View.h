#ifndef _VCF_VIEW_H__
#define _VCF_VIEW_H__
//View.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */

namespace VCF{

class GraphicsContext;

class Control;

class Model;

/**
\class View View.h "vcf/ApplicationKit/View.h"  
A view represents a visual display or rendering of part or all of the data 
in a model. Each view has a single model that it is associated with. Each view 
has a single control that it is associated with. A control may have 
more than one view if it's main view is implemented in such a way that it 
allows ofr multiple views. Unlike a control which gets OS events like mouse 
input and keyboard input and may be a wrapper for some underlying native 
control (like a edit box, or a tree control), a view is strictly for
rendering the model associated with it. 

*/
class APPLICATIONKIT_API View  {
public:
	virtual ~View(){};

    virtual Model* getViewModel() = 0;

	virtual void setViewModel( Model* viewModel ) = 0;

	virtual Control* getViewControl() = 0;

	virtual void setViewControl( Control* viewControl ) = 0;

	virtual void paintView( GraphicsContext* context ) = 0;

	/**
	*updates the view. If the updatedModel is NULL,
	*this signifies the model is detaching itself
	*from the view, and the view should clean up it's
	*display appropriately
	*/
	virtual void updateView( Model* updatedModel ) = 0;
};





};


#endif // _VCF_VIEW_H__

/**
$Id$
*/
