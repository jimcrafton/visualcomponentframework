#ifndef _VCF_POPUPMENU_H__
#define _VCF_POPUPMENU_H__
//PopupMenu.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */



namespace VCF{

class PopupMenuPeer;

class Control;

#define POPUPMENU_CLASSID		"DDC5AE1F-89CD-4eca-98D4-9ECEFF7B7689"
/**
\class PopupMenu PopupMenu.h "vcf/ApplicationKit/PopupMenu.h"
This class is for creating popup menus, sometimes 
referred to as a context, or contextual menu. Generally
it used when the user right clicks on a control. 
*/
class APPLICATIONKIT_API PopupMenu : public Menu {
public:

	PopupMenu( Control* control=NULL );

	PopupMenu( Component* owner );

	PopupMenu( const String& name, Component* owner );

	PopupMenu( const String& name );

	virtual ~PopupMenu();

	/**
	This "pops up" a context menu and shows it to the user.
	If the user clicks on a menu item in the popup menu, that
	menu item is returned. Keep in mind that the menu item is 
	"owned" by the popup menu instance, and is destroyed when
	the popup menu is.
	@return MenuItem returns a pointer to the menu item that
	the user selected, or NULL if the user dismissed the popup
	menu without clicking on any menu item.
	*/
	virtual MenuItem* popup( Point* pt );

	void setControl( Control* control );
protected:

	void init();

	virtual void destroy();

	PopupMenuPeer* popupPeer_;	
};

};


/**
*CVS Log info
*$Log$
*Revision 1.3  2006/04/07 02:35:24  ddiego
*initial checkin of merge from 0.6.9 dev branch.
*
*Revision 1.2.6.4  2006/03/14 02:25:47  ddiego
*large amounts of source docs updated.
*
*Revision 1.2.6.3  2005/08/28 05:14:17  ddiego
*small changes to component editor class.
*
*Revision 1.2.6.2  2005/08/27 04:49:35  ddiego
*menu fixes.
*
*Revision 1.2.6.1  2005/08/25 01:48:19  ddiego
*minor update to popupmenu code
*
*Revision 1.2  2004/08/07 02:49:09  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.3  2004/06/06 07:05:30  marcelloptr
*changed macros, text reformatting, copyright sections
*
*Revision 1.1.2.2  2004/04/29 03:43:14  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:18  ddiego
*migration towards new directory structure
*
*Revision 1.10.4.1  2004/04/26 21:58:21  marcelloptr
*changes for dir reorganization: _VCF_MACRO_H__
*
*Revision 1.10  2003/12/18 05:15:57  ddiego
*merge from devmain-0-6-2 branch into the stable branch
*
*Revision 1.9.4.3  2003/12/13 15:56:08  ddiego
**** empty log message ***
*
*Revision 1.9.4.2  2003/09/21 04:15:34  ddiego
*moved the cvs info data to teh bottom of the header instead of the
*top so it is easier to get to the actual header class declarations
*instead of having to wade through all the cvs info stuff.
*
*Revision 1.9.4.1  2003/09/12 00:09:32  ddiego
*added better tabbing behaviour - fixed an earlier bug.
*Code is easier to understand and it simplified the implementation
*a bit as well
*Moved around the RTTI definitions for various Appkit classes to a
*single inline and stripped them from the various class headers
*
*Revision 1.9  2003/05/17 20:37:03  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.8.2.1  2003/03/12 03:09:41  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.8  2003/02/26 04:30:38  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.7.20.1  2002/12/25 22:06:19  ddiego
*whole bunch of little changes to the header files used by the ApplicationKit
*to get rid of no newline warnings by gcc.
*fixes to various event handlers in the ApplicationKit to compile with gcc
*since gcc does not like a member function pointer without the "&"
*addressof operator.
*Added initial file for the X11 UIToolkit implementation
*
*Revision 1.7  2002/01/24 01:46:47  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


#endif // _VCF_POPUPMENU_H__


