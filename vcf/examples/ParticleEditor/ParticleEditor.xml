<!--

Copyright (c) 2004, Alan Fischer

-->


<section><title>ParticleEditor</title>
	<para>
		The Particle Editor is an example of a more complex VCF application using the OpenGLKit.
		It basically consists of an OpenGL particle system, and a collection of VCF controls to adjust
		the parameters behind the particle system.
	</para>
	<para>
		To see it in action, load one of the sample particle effects from the File menu, such as:
		fireworks.xml, fountain.xml, or papers.xml (smoke.xml and sparks.xml are part of the fireworks)
	</para>
	<para>
		There is the option to build it with and without GLEW.  (http://glew.sf.net)
		If built with GLEW, it will use vertex programs if available.
		The only difference is if it is using vertex programs, it will run faster.
		The particle systems will sill look the same.
	</para>
	<para>
		The functionality of the controls are fairly self explanatory.  For the majority of them, you can
		simply tweak the value, and see what affect it has on the particle system.
		Some options, like Alpha Blending will only take affect if the start or end color has an alpha value that is not 255.
		(The alpha component of the colors is the fourth color control value, adjusting it will not have any effect
		on the color patch, so dont be alarmed)
	</para>
	<para>
		The Trailing System is the name of a particle system to attach to each particle in the current system.
		The Ending System is the name of a particle system to fire at the end of each particles life in the current system.
		See fireworks.xml for an example of these.
	</para>
	<para>
		And finally, save your particle system with the File, Save menu option.
		This will use the FoundationKit's XML writing capabilities to save your new particle system out to a file
		for later viewing.
	</para>
	<para>
		The basic structure of the Example is as follows:
	</para>
	<para>
		ColorPicker.h, Spinner.h:  Custom VCF controls, a color picker, and then the classic spinner.
	</para>
	<para>
		ParticleEditor.h:  The GUI to the particle system, written using the ApplicationKit.
	</para>
	<para>
		ParticleRenderer.h:  The actual object that renders a Particle System using OpenGL and the OpenGLKit.
	</para>
	<para>
		ParticleSystem.h:  The particle system.  This takes the parameters that you set and updates the particles.
	</para>
	<para>
		ParticleResource.h, ParticleResourceManager.h, XMLParticleResourceHandler.h:
			Objects that represent the parameters of a particle system, and handle the references to different
			systems, as well as handle the loading and saving of the system parameters.
	</para>
</section>




<!--
CVS Log info
\$Log: ParticleEditor.xml,v 
-->

