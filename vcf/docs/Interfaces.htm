<HTML>
 <HEAD>
  <!-- $MVD$:app("RoboHELP HTML Edition by Blue Sky Software, portions by MicroVision Dev. Inc.","769") -->
  <!-- $MVD$:template("","0","0") -->
  <!-- $MVD$:color("18","b5edfb","Code Orange","1") -->
  <!-- $MVD$:color("19","ffefce","Custom #1","0") -->
  <!-- $MVD$:color("20","b58800","Custom #2","0") -->
  <!-- $MVD$:fontset("Trebuchet MS","Trebuchet MS") -->
  <!-- $MVD$:fontset("Untitled Font Set 1","d") -->
  <TITLE>Interfaces</TITLE>
  <META NAME="generator" CONTENT="Microsoft FrontPage 4.0">
  <META NAME="generator" CONTENT="RoboHELP by Blue Sky Software www.blue-sky.com HTML Edition">
  <SCRIPT LANGUAGE="javascript" TITLE="BSSC Special Effects" SRC="BSSCDHTM.js">
 </SCRIPT><LINK
  REL="StyleSheet" HREF="default.css"></HEAD>
  <BODY ONLOAD="BSSCOnLoad();" ONCLICK="BSSCOnClick();" ONUNLOAD="BSSCOnUnload();">
  <H1>
   <IMG SRC="vcflogo.gif" WIDTH="230" HEIGHT="172" VSPACE="0" HSPACE="0" BORDER="0"></H1>
  <H1>
   Interfaces</H1>
  <P>
   The term <SPAN STYLE="font-style : italic;font-weight : bold;">Interface</SPAN> 
   in the VCF does not mean a COM interface, instead it is just a C++ 
   class that has a set of virtual pure methods defined that must be 
   implemented by a deriving class. Further more the interface class 
   must either derive from another interface class, the common VCF 
   interface class VCF::Interface, or nothing at all. This helps to 
   prevent multiple inheritance problems (the &quot;deadly diamond&quot; effect).</P>
  <P>
   In addition, an interface does not define a constructor (the default 
   C++ constructor is OK), and <SPAN STYLE="font-style : italic;font-weight : bold;">MUST</SPAN><SPAN STYLE="font-style : normal;font-weight : normal;"> 
   declare a destructor as </SPAN><SPAN STYLE="font-style : italic;font-weight : normal;">virtual</SPAN><SPAN STYLE="font-style : normal;font-weight : normal;">,
    a requirement of the standard C++ RTTI dynamic typing system. The 
   body of the constructor should also be declared in the header of the 
   interface ( usually <FONT FACE="d">{}</FONT> implementation is all 
   that is neccessary)</SPAN></P>
  <P>
   <SPAN STYLE="font-style : normal;font-weight : normal;">As a naming 
   standard, and to avoid method name collision, methods with common 
   names should include the interface name as well, to more clearly 
   indicate where the method belongs. For example:</SPAN></P><PRE><FONT
    COLOR="BLUE"><SPAN STYLE="font-style : italic;">//not the best definition - notice the doIt() method</SPAN></FONT><BR><SPAN
    STYLE="font-weight : bold;">class</SPAN> SimpleInterface  {<BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">virtual</SPAN><SPAN STYLE="font-weight : normal;"> ~SimpleInterface(){}; </SPAN><BR><BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">virtual</SPAN><SPAN STYLE="font-weight : normal;"> </SPAN><SPAN STYLE="font-weight : bold;">void</SPAN><SPAN STYLE="font-weight : normal;"> doIt() = </SPAN><SPAN STYLE="font-weight : bold;">0</SPAN><SPAN STYLE="font-weight : normal;">;    </SPAN><SPAN STYLE="font-style : italic;font-weight : normal;"><FONT COLOR="BLUE">//this isn't a very good idea  </FONT></SPAN><BR><SPAN
    STYLE="font-weight : normal;">}</SPAN><BR><BR><SPAN
    STYLE="font-weight : normal;"><FONT COLOR="BLUE"><SPAN STYLE="font-style : italic;">// this is the prefered way</SPAN></FONT></SPAN><BR><SPAN
    STYLE="font-weight : bold;">class</SPAN><SPAN STYLE="font-weight : normal;"> SimpleInterface {</SPAN><BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">virtual</SPAN><SPAN STYLE="font-weight : normal;"> ~SimeplInterface(){};</SPAN><BR><BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">virtual</SPAN><SPAN STYLE="font-weight : normal;"> </SPAN><SPAN STYLE="font-weight : bold;">void</SPAN><SPAN STYLE="font-weight : normal;"> SimpleInterfaceDoIt() = </SPAN><SPAN STYLE="font-weight : bold;">0</SPAN><SPAN STYLE="font-weight : normal;">; </SPAN><SPAN STYLE="font-style : italic;font-weight : normal;"><FONT COLOR="BLUE">//better - prevents name collision in</FONT></SPAN><BR><SPAN
    STYLE="font-weight : normal;">                                             </SPAN><SPAN STYLE="font-style : italic;font-weight : normal;"><FONT COLOR="BLUE">//implementing classes</FONT></SPAN><BR><SPAN
    STYLE="font-weight : normal;">};</SPAN><BR><BR><BR><SPAN
    STYLE="font-style : italic;font-weight : normal;"><FONT COLOR="BLUE">//this is also OK - note the use of inheritance from the VCF::Interface class</FONT></SPAN><BR><SPAN
    STYLE="font-weight : bold;">class</SPAN><SPAN STYLE="font-weight : normal;"> SimpleInterface : </SPAN><SPAN STYLE="font-weight : bold;">public</SPAN><SPAN STYLE="font-weight : normal;"> VCF::Interface{</SPAN><BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">virtual</SPAN><SPAN STYLE="font-weight : normal;"> ~SimeplInterface(){};</SPAN><BR><SPAN
    STYLE="font-weight : normal;">     </SPAN><SPAN STYLE="font-weight : bold;">...</SPAN><SPAN STYLE="font-style : italic;font-weight : normal;"><FONT COLOR="BLUE">//rest of interface declaration</FONT></SPAN><SPAN STYLE="font-weight : normal;"> </SPAN><BR><SPAN
    STYLE="font-weight : normal;">};</SPAN><BR><BR><BR></PRE><P>
   <!-- $MVD$:spaceretainer() -->&nbsp;
 </BODY>
</HTML>