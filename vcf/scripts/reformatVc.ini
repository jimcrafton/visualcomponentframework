# Configuration file for dsp.py
#  - you can give any name you want to the all the sections beside the first [activesection]
#  - you can give any name you want to the entries in the dirlist and excludesubdirlist sections
#  - first all the options are read and parsed in a second step
#  - the options with [*] have the sintax: d:[-1|0|+1], r:[-1|0|+1]
#       this means: d --> debug option ; r --> release option
#       [ -1 -> remove/disable the option ] [ 0 -> does nothing ] [ 1 -> add/activate the option ]
#    -  at the same times each option is managed by the script in a sensible way, i.e. they are
#           never removed if that would compromise the possibility to compile the project
#           These choices are hardcoded in few places of the script
#
# NOTES: see NOTES refers to the explanations at the end of the script reformatConfig.py


# this section set the name of the configuration section you want to use
[activesection]
#  - the name of the entry in this section must exist be the name of an existing section
#    current choices are: vcfscript  / deleteSccOnly / duplicateVcOnly / conformAllLibraries / test / vcfbuilder 
section = vcfscript


#########################################################################################

[vcfscript]
# basic configuration for all what Vcf needs
common_section = 'vcfcommon'

enableProjectFilesModif        = 1  # disable any kind of changes in the project files content ( *.dsp and *.vcproj ). To see any problems. But no modifications.
enableSourceFilesModif         = 0  # disable any kind of changes in the source files content ( *.h and *.cpp ). To see any problems. But no modifications.

createWorkspaces               = 1  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 1  # enables duplication of workspaces in the list the section_duplicateWorkspaces
conformLibraries               = 1  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOptionOptimize         = d:Od, r:O1 # [*] reformat the optimization option /O# use an allowed value [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:+1, r:-1 # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:-1, r:-1 # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 1  # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 1  # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 1  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 1  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too


#########################################################################################

[deleteSccOnly]
# just deletes the source code safe entries
common_section = 'vcfcommon'

modifyProjectFiles             = 1          # disable any kind of changes in the source files content ( *.dsp and *.vcproj )
modifySourceFiles              = 0          # disable any kind of changes in the source files content ( *.h and *.cpp )

createWorkspaces               = 0  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 0  # enables duplication of workspaces in the list the section_duplicateWorkspaces
conformLibraries               = 0  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOptionOptimize         = d:0, r:0   # [*] reformat the optimization option /O# use an allowed value [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:0, r:0   # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:0, r:0   # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 0          # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 0          # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 0  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 0  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too


#########################################################################################

[duplicateVcOnly]
# this just copies what we have ( dsp and dsw ) for vc6 to vc70 and vc71
# and creates solution files where necessary
common_section = 'vcfcommon'

modifyProjectFiles             = 1          # disable any kind of changes in the source files content ( *.dsp and *.vcproj )
modifySourceFiles              = 0          # disable any kind of changes in the source files content ( *.h and *.cpp )

createWorkspaces               = 0  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 0  # enables duplication of workspaces in the list the section_duplicateWorkspaces
conformLibraries               = 0  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOptionOptimize         = d:0, r:0   # [*] reformat the optimization option /O# use an allowed value [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:0, r:0   # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:0, r:0   # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 1          # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 1          # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 1  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 1  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too


#########################################################################################

[conformAllLibraries]
# this conforms the static libraries to the dynamic ones according to the table in the section vcfscript_conformLibraries
common_section = 'vcfcommon'

modifyProjectFiles             = 1          # disable any kind of changes in the source files content ( *.dsp and *.vcproj )
modifySourceFiles              = 0          # disable any kind of changes in the source files content ( *.h and *.cpp )

createWorkspaces               = 0  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 0  # enables duplication of workspaces in the list the section_duplicateWorkspaces
conformLibraries               = 1  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOptionOptimize         = d:0, r:0   # [*] reformat the optimization option /O# use an allowed value [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:0, r:0   # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:0, r:0   # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 0  # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 0  # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 0  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 0  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too






#########################################################################################
# this section set the common properties for all the vcf settings

[vcfcommon]
section_dirlist                             = vcfscript_dirs
section_excludesubdirlist                   = vcfscript_exclude
section_conformLibraries                    = vcfscript_conformLibraries
section_createWorkspaces                    = vcf_createWorkspaces
section_duplicateWorkspaces                 = vcf_duplicateWorkspaces
section_librariesChangePostfix              = vcf_librariesChangePostfix
section_projectsNoPostfix                   = vcf_projectsNoPostfix
section_projectsNoPostfixOutput             = vcf_projectsNoPostfixOutput
section_projectsNoPostfixIfUnderCompilerDir = vcf_projectsNoPostfixIfUnderCompilerDir
section_projectsOutSameDirAsOutputDir       = vcf_projectsOutSameDirAsOutputDir
section_projectsOutputOnProjectDir          = vcf_projectsOutputOnProjectDir

# Remark: this will become the current working directory for the program. All the other paths in this file are relative to this one
workingDir = '../' # I am expecting this script to be in the script subdirectory - also relative paths are accepted. This changes the cwd.

filename           = ''  # process only filenames containing this string ( lettercase is ignored )
allowedExtensions  = ".dsp" # allowed extensions for the filenames
recurse            = 1   # subdirectory recusion
verbose            = 1   # verbose level for the script [0-4]. 0 is completely quiet.
warning            = 1   # warning level
errorLevel         = 2   # ( 3 <= errorLevel ) --> with 3 or 4 or higher stops on first error
log                = 0   # logging into a file
prompt             = 0   # Press enter to continue ( Ctrl+C to exit ) ... 

unixStyle          = 0   # when True uses '/' instead than '\\' ( suggested False: sln files want windows style )
backupFiles        = 0   # not necessary ( it creates many annoying *.bak files )
modifyVc6          = 1   # if false disable any modification on the original vc6 files

enableVcfSpecific  = 1   # enable any vcf-specific action

allowDirs                      = 1     # enable [_dirs]    section: disabled -> any directory # use it as safety measure !
excludeSubdirs                 = 1     # enable [_exclude] section: disabled -> any subdirectory

# these two options are here because mostly managed by the script itself [ 0 would completely disable them, but at the same time
#  the following values garantee that the dsp files keep a 'standard' format
deleteSccLines                 = 1  # eliminates all source code control lines

reformatOutputIntermediateDirs = 1  # reformat the Output/Intermediate Directories
reformatOptionOutput           = d:-1, r:-1 # [*] reformat the option OutputDir /Fo ( in normal cases we don't want it: see NOTES )

fixFilenamePostfix = 1 # checks for the correctness of postfixes ( like '_vc70_sd' ) of filename entries and fixes them. Suggested put it back to False when not used ( works only for vcproj files and fixes probable bug of vc7 compiler. See note end of script )

dependenciesWorkspace = './build/vc60/vcfMasterDepencies.dsw' # dependency where to copy all the dependencies from
referenceSolution     = './build/vc70/vcfAllProjects.sln'     # mainly used to keep the original uuids

[vcfscript_dirs]
# allowed directories ( this is activated by allowDirs )
d1 = '.'

[vcfscript_exclude]
# excluded subdirectories ( this is activated by excludeSubdirs )
d1 = 'add-ins'
d2 = 'BlackBox'
d3 = 'MSDNIntegrator'
d4 = 'build/gtk'
d5 = 'examples/EventsWithMFC'
#
#d6 = 'examples/QTPlayer'
#d7 = 'build/icl7'
#d8 = 'thirdparty'

[vcfscript_conformLibraries]
# libraries that we want to conform to the other version:  [ master --> changed ] or [ changed <-- master ]
c1  = FoundationKitDLL    -->  FoundationKit
c2  = GraphicsKitDLL      -->  GraphicsKit
c3  = ApplicationKitDLL   -->  ApplicationKit
c4  = NetworkKitDLL       -->  NetworkKit
c5  = RemoteObjectKit     -->  RemoteObjectKitStatic
c5  = Win32HTMLBrowser    -->  Win32HTMLBrowser_StaticLib

[vcf_staticLibraries]
# list of static libraries to be included in any workspace
s1 = libAGG, FoundationKit, GraphicsKit, ApplicationKit
s2 = NetworkKit, RemoteObjectKitStatic, Win32HTMLBrowser_StaticLib

[vcf_dynamicLibraries]
# list of dynamic libraries to be included in any workspace
d1 = libAGG, FoundationKitDLL, GraphicsKitDLL, ApplicationKitDLL
d2 = NetworkKitDLL, RemoteObjectKit, Win32HTMLBrowser

[vcf_librariesChangePostfix]
# in all the project files we changes the postfix to lib according to the configuration and the compiler of the project
# apply this only if you can't introduce a librarySelectLib.h file in the project
# Ex: 
#c1 = project: lib11, lib12, lib1n
#c2 = project: lib21, lib21, lib2n
# changes the postfix: in project_vc70: lib1 -> lib1_vc70_sd, lib2_vc70_sd, lib1_vc70_d, lib1_vc70_d  etc, according to the config where it is located
# if the library does not exists it doesn't matter
# if the extension is specified, it works only with name found that have that extension 
# if the '_s' is specified, it treats the library as static
#c1  = js: none in vcf !

[vcf_createWorkspaces]
# workspace to be created with all the projects we worked with ( i.e. in the allowed directories ) in it
allProjectsWorkspace           = '.\build\vc60\vcfAllProjects.dsw'  # name of the workspace to be used to compile all the projects
allExamplesWorkspace           = '.\Examples\Examples.dsw'          # name of the workspace to be used to compile all the examples

[vcf_duplicateWorkspaces]
# vc6 workspaces to be duplicated for vc70 and vc71 compilers
blackBoxWorkspace              = './src/BlackBox/BlackBox.dsw'      # name of the workspace to be used for BlackBox
xmakeWorkspace                 = './src/xmake/xmake.dsw'            # name of the workspace to be used with xmake
vcfAllLibs                     = './build/vc60/vcfAllLibs.dsw'      # name of the workspace to be used to compile all the libraries

[vcf_projectsNoPostfix]
# no postfix at all ( for .exe .pdb .pch and any files with any other extension too )
# future implemenation should specify the extensions here with a format similar to: vcf_librariesChangePostfix
c1 = "CreateInfo"
c2 = "CreateBundle"
c3 = "DocViewAdvanced"
c4 = "DocViewBasics"
c5 = "libXmake"
c6 = "xmake"

[vcf_projectsNoPostfixOutput]
# no postfix on output: the .exe and .pdb files
# well: at this point is only implemented as in vcf_projectsNoPostfix
#c1 = "xmake"

[vcf_projectsNoPostfixIfUnderCompilerDir]
# this section is created as workaround of a Microsoft bug
# these projects never get the postfix if under a subdirectory that is already specifying the compiler
# normally we have: DocBook\vc70\DocBookArticle_vc70.lib
# if DocBookArticle is in this list and under the dir DocBook\vc70\ its name for the debug configuration will be DocBook\vc70\DocBookArticle_d.lib
# if DocBookArticle is in this list and under the dir DocBook\vc70\Debug its name for the debug configuration will be DocBook\vc70\DocBookArticle.lib
# format:
#c1 = project1, "project12", project1n
#c2 = project2, "project22", project2n
#c1  = none on vcf !

[vcf_projectsOutSameDirAsOutputDir]
#LINK /out:subdir is same subdir as in # PROP Output_Dir

[vcf_projectsOutputOnProjectDir]
# no postfix at all ( for .exe .pdb .pch and any files with any other extenstion too )
# future implemenation should specify the extensions here with a format similar to: vcf_librariesChangePostfix
c1 = "AppResources"
c2 = "Localization"
c3 = "QTPlayer"
c4 = "Resources"
c5 = "TextEdit"



#########################################################################################

[test]
common_section = 'vcfcommon'

section_dirlist             = test_dirs
section_excludesubdirlist   = test_exclude
section_conformLibraries    = vcfscript_conformLibraries
section_createWorkspaces    = ''
section_duplicateWorkspaces = ''


modifyProjectFiles             = 1          # disable any kind of changes in the source files content ( *.dsp and *.vcproj )
modifySourceFiles              = 0          # disable any kind of changes in the source files content ( *.h and *.cpp )

# Remark: this will become the current working directory for the program. All the other paths in this file are relative to this one
workingDir = '.' # also relative paths are accepted. This changes the cwd.

filename   = ''  # process only filenames containing this string ( lettercase is ignored )
recurse    = 0   # subdirectory recusion
verbose    = 1   # verbose level for the script [ 0-4]. 0 is completely quiet.
warning    = 1   # warning level
prompt     = 1   # Press enter to continue ( Ctrl+C to exit ) ... 

unixStyle          = 0  # when True uses '/' instead than '\\' ( suggested False: sln files want windows style )
backupFiles        = 0  # not necessary ( it creates many annoying *.bak files ) 
modifyVc6          = 1  # enable any modification on the original vc6 files

enableVcfSpecific  = 1  # enable any vcf-specific action
createWorkspaces               = 0  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 0  # enables duplication of workspaces in the list the section_duplicateWorkspaces

allowDirs                      = 1  # enable [_dirs]    section: disabled -> any directory # use it as safety measure !
excludeSubdirs                 = 1  # enable [_exclude] section: disabled -> any subdirectory
deleteSccLines                 = 1  # eliminates all source code control lines
conformLibraries               = 0  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOutputIntermediateDirs = 1  # reformat the Output/Intermediate Directories (suggested: always 1)
reformatOptionOutput           = d:-1, r:-1 # [*] reformat the option OutputDir /Fo ( in normal cases we don't want it: see NOTES )

reformatOptionOptimize         = d:0, r:0   # [*] reformat the optimization option /O# use an allowed value e.g. [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:0, r:0   # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:0, r:0   # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 0  # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 0  # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 0  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 0  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too

[test_dirs]
# allowed directories ( this is activated by allowDirs )
d1 = '.'
;d2 = 'blackbox/bbtest'

[test_exclude]
# excluded subdirectories( this is activated by excludeSubdirs )
d1 = 'add-ins'
d2 = 'pincopallino'
#d2 = 'examples'
d3 = 'thirdparty'
#d4 = 'build'


#########################################################################################

[vcfbuilder]
# basic configuration for all what Vcf needs
common_section = 'vcfcommon'

enableProjectFilesModif        = 1  # disable any kind of changes in the project files content ( *.dsp and *.vcproj ). To see any problems. But no modifications.
enableSourceFilesModif         = 0  # disable any kind of changes in the source files content ( *.h and *.cpp ). To see any problems. But no modifications.

createWorkspaces               = 0  # enables creation of a workspace with all the projects we worked with ( i.e. in the allowed directories ) in it
duplicateWorkspaces            = 1  # enables duplication of workspaces in the list the section_duplicateWorkspaces
conformLibraries               = 0  # conforms the libraries such that static and dynamic versions have the same body, i.e. the same groups in the target

reformatOptionOptimize         = d:Od, r:O1 # [*] reformat the optimization option /O# use an allowed value [ d:Od, r:O1 ] but [d:0, r:0] -> does nothing
reformatOptionPdb              = d:+1, r:-1 # [*] reformat/delete the option ProgramDatabase /F[r|R] /Fd ( but not /FD ) and /pdb: and /debug
reformatOptionBrowse           = d:-1, r:-1 # [*] reformat/delete the option Browse database /Br
copyToIcl7                     = 1  # copy dsp files in corresponding directories for icl7 ( option VCF specific )
copyToVc70                     = 1  # copy dsp files in corresponding directories for vc70 ( option VCF specific )
copyToVc71                     = 1  # copy dsp files in corresponding directories for vc71 ( option VCF specific )
synchVcprojSln                 = 1  # only with (copyToVc7x==1). instead then duplicating dsp files it synchronizes the corresponding vcproj unless it does not exists
keepDspCopy                    = 1  # only with (synchVcprojSln==1). Keeps or create the dsp 'version' too

