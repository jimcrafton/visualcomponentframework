#ifndef _VCF_FILL_H__
#define _VCF_FILL_H__
//Fill.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */




namespace VCF{


class GraphicsContext;
class Path;

/**
\class Fill Fill.h "vcf/GraphicsKit/Fill.h"
The Fill class is a high level class used to fill in a Path. A fill is
set on the current graphics context, and then a path is drawn.
\code
Fill* myFill = new MyFill();
GraphicsContext* ctx = getSomeGraphiceContext();//imaginary function to get a graphics context

Path* path = getSomePath();//imaginary function to get a path

//sets the fill
ctx->setCurrrentFill( myFill );

//draws the path!
ctx->draw( path );

delete myFill;
delete path;

\endcode

See the StrokesAndFills example (in vcf/examples/StrokesAndFills ) for a more
complete example of this.


The interface is quite simple, and more concrete details are completely up to the 
implement of the interface.
@see BasicFill
@see GraphicsContext
@see Path
*/
class GRAPHICSKIT_API Fill : public Interface{
public:

	virtual ~Fill(){};

	/**
	sets the context for the fill. The GraphicsContext will
	call this when the GraphicsContext::setCurrrentFill() method is 
	called.
	*/
	virtual void setContext( GraphicsContext* context ) = 0;

	/**
	renders the fill using the current path. The fill can retrieve the points for the
	path by calling either Path::getPoints() or Path::flattenPoints().
	*/
    virtual void render( Path* path ) = 0;
};

};


#endif // _VCF_FILL_H__

/**
$Id$
*/
