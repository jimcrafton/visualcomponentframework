#ifndef _VCF_DRAGSOURCE_H__
#define _VCF_DRAGSOURCE_H__
//DragSource.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */



namespace VCF{


class DragDropPeer;

class DataObject;

enum DragActionType {
	daNone = 0,
	daCopy,
	daMove,
	daLink
};

/**
\class DragSource DragSource.h "vcf/ApplicationKit/DragSource.h"
The drag source represents the source, or beginning
of a drag drop operation.
@delegates
	@del DragSource::SourceBegin
	@del DragSource::SourceDropped
	@del DragSource::SourceEnd
	@del DragSource::SourceGiveFeedback
	@del DragSource::SourceCanContinueDragOp
*/
class APPLICATIONKIT_API DragSource : public Object {

public:
	enum {
		DRAG_BEGUN = CUSTOM_EVENT_TYPES + 300,
		DRAG_DROPPED,
		DRAG_GIVEFEEDBACK,
		DRAG_CANCONTINUE,
		DRAG_END
	};

	DragSource();
	virtual ~DragSource();

	void startDragDrop( DataObject* data );

    void copyDataToClipboard();

	void setActionType( const DragActionType& actionType );

	DragActionType getActionType();

	/**
	@delegate SourceBegin this is called just as the drag-drop operation is
	started, once startDragDrop() has been called.
	@event DragSourceEvent
	@see startDragDrop()
	*/
	DELEGATE(SourceBegin)

	/**
	@delegate SourceDropped this is fired if the drag-drop operation was successfully completed.
	@event DragSourceEvent
	@eventtype DragSource::DRAG_DROPPED
	*/
	DELEGATE(SourceDropped)

	/**
	@delegate SourceEnd this is called when the drag-drop operation is completed.
	It does <i>not</i> indicate whether or not the drag-drop operation was successful.
	@event DragSourceEvent
	@eventtype DragSource::DRAG_END
	*/
	DELEGATE(SourceEnd)

	/**
	@delegate SourceGiveFeedback this is fired when the underlying windowing system
	needs to know what kind of feed back to present the user with during the
	drag-drop operation.
	@event DragSourceEvent
	@eventtype DragSource::DRAG_GIVEFEEDBACK
	*/
	DELEGATE(SourceGiveFeedback)

	/**
	@delegate SourceCanContinueDragOp this is fired whenever the underlying
	windowing system needs to query whether or not the drag-drop operation
	should continue.
	@event DragSourceEvent
	@eventtype DragSource::DRAG_CANCONTINUE
	*/
	DELEGATE(SourceCanContinueDragOp)


protected:
    DragActionType actionType_;
    DragDropPeer * dragDropPeer_;

    DataObject * clipboardDataObject_;
};

};


/**
*CVS Log info
*$Log$
*Revision 1.3  2006/04/07 02:35:23  ddiego
*initial checkin of merge from 0.6.9 dev branch.
*
*Revision 1.2.6.1  2006/03/14 02:25:47  ddiego
*large amounts of source docs updated.
*
*Revision 1.2  2004/08/07 02:49:08  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.3  2004/06/06 07:05:30  marcelloptr
*changed macros, text reformatting, copyright sections
*
*Revision 1.1.2.2  2004/04/29 03:43:13  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:16  ddiego
*migration towards new directory structure
*
*Revision 1.10.4.1  2004/04/26 21:58:35  marcelloptr
*changes for dir reorganization: _VCF_MACRO_H__
*
*Revision 1.10  2003/12/18 05:15:57  ddiego
*merge from devmain-0-6-2 branch into the stable branch
*
*Revision 1.9.2.4  2003/12/08 05:05:28  ddiego
*added a bunch more documentation to classes, and added support for new doc
*keywords (@delegates, @del, @delegate, @event, and @eventtype). This
*makes it easier to see at a glance what events a class fires off.
*Added finishing touches for the Action implementation and have a partially
*complete example for this checked in.
*
*Revision 1.9.2.3  2003/09/21 04:15:34  ddiego
*moved the cvs info data to teh bottom of the header instead of the
*top so it is easier to get to the actual header class declarations
*instead of having to wade through all the cvs info stuff.
*
*Revision 1.9.2.2  2003/09/12 00:09:32  ddiego
*added better tabbing behaviour - fixed an earlier bug.
*Code is easier to understand and it simplified the implementation
*a bit as well
*Moved around the RTTI definitions for various Appkit classes to a
*single inline and stripped them from the various class headers
*
*Revision 1.9.2.1  2003/09/02 02:11:14  ddiego
*fixed some glitches in drag drop. also cleaned up the drag drop event
*classes. Began some fixes to the html browser implementation on Win32
*
*Revision 1.9  2003/08/09 02:56:43  ddiego
*merge over from the devmain-0-6-1 branch
*Changes
*Features:
*-Added additional implementation to better support the MVC architecture in
*the VCF
*
*-Added a Document/View architecure that is similar to MFC's or NextSteps's
*Doc/View architectures
*
*-Integrated the Anti Grain Graphics library into the GraphicsKit. There is
*now basic support for it in terms of drawing vector shapes
*(fills and strokes). Image support will come in the next release
*
*-Added several documented graphics tutorials
*
*Bugfixes:
*
*[ 775744 ] wrong buttons on a dialog
*[ 585239 ] Painting weirdness in a modal dialog ?
*[ 585238 ] Modal dialog which makes a modal Dialog
*[ 509004 ] Opening a modal Dialog causes flicker
*[ 524878 ] onDropped not called for MLTcontrol
*
*Plus an issue with some focus and getting the right popup window to activate
*has also been fixed
*
*Revision 1.8.2.1  2003/05/25 19:07:10  ddiego
*fixed bug [ 524878 ] onDropped not called for MLTcontrol. This
*was due to errors in the drag-drop implementation for WIn32 and is
*now fixed.
*Also cleaned up the drag-drop implementation and moved/deleted a number of
*irrelevant files for COM support. The vcf/include/com and vcf/src/COM
*directories are now gotten rid of.
*
*Revision 1.8  2003/05/17 20:37:05  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.7.2.2  2003/03/23 03:23:46  marcelloptr
*3 empty lines at the end of the files
*
*Revision 1.7.2.1  2003/03/12 03:09:49  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.7  2003/02/26 04:30:38  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.6.20.2  2003/02/24 05:42:18  ddiego
*moved the code for the VariantData calss into it's own header
*migrated to the new event style using Delegates instead of relying on
*the ugly macros that we were using before - same functionality though
*made sure everything still works and compiles, including neccessary
*changes in the VCF Builder so that it creates code in the new style
*This changes to teh new style of using Delegates completes task 58837
*
*Revision 1.6.20.1  2002/12/25 22:06:21  ddiego
*whole bunch of little changes to the header files used by the ApplicationKit
*to get rid of no newline warnings by gcc.
*fixes to various event handlers in the ApplicationKit to compile with gcc
*since gcc does not like a member function pointer without the "&"
*addressof operator.
*Added initial file for the X11 UIToolkit implementation
*
*Revision 1.6  2002/01/24 01:46:47  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


#endif // _VCF_DRAGSOURCE_H__


