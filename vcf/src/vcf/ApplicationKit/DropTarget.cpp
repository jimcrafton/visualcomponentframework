//DropTarget.cpp

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


/* Generated by Together */

#include "vcf/ApplicationKit/ApplicationKit.h"



using namespace VCF;

DropTarget::DropTarget( Control* control )
{
	targetContainer_.initContainer( targets_ );

	dropTargetPeer_ = UIToolkit::createDropTargetPeer();
	if ( NULL != dropTargetPeer_ ){
		dropTargetPeer_->setDropTarget( this );
	}
	else {
		throw InvalidPeer( MAKE_ERROR_MSG_2("Unable to create DropTarget peer") );
	}

	addTargetControl( control );
}

DropTarget::DropTarget()
{
	targetContainer_.initContainer( targets_ );

	dropTargetPeer_ = UIToolkit::createDropTargetPeer();
	if ( NULL != dropTargetPeer_ ){
		dropTargetPeer_->setDropTarget( this );
	}
	else {
		throw InvalidPeer( MAKE_ERROR_MSG_2("Unable to create DropTarget peer") );
	}
}

DropTarget::DropTarget( Component* owner ):
	Component( owner )
{
	targetContainer_.initContainer( targets_ );

	dropTargetPeer_ = UIToolkit::createDropTargetPeer();
	if ( NULL != dropTargetPeer_ ){
		dropTargetPeer_->setDropTarget( this );
	}
	else {
		throw InvalidPeer( MAKE_ERROR_MSG_2("Unable to create DropTarget peer") );
	}
}

DropTarget::DropTarget( const String& name, Component* owner ):
	Component( name, owner )
{
	targetContainer_.initContainer( targets_ );

	dropTargetPeer_ = UIToolkit::createDropTargetPeer();
	if ( NULL != dropTargetPeer_ ){
		dropTargetPeer_->setDropTarget( this );
	}
	else {
		throw InvalidPeer( MAKE_ERROR_MSG_2("Unable to create DropTarget peer") );
	}
}

DropTarget::DropTarget( const String& name ):
	Component( name )
{
	targetContainer_.initContainer( targets_ );

	dropTargetPeer_ = UIToolkit::createDropTargetPeer();
	if ( NULL != dropTargetPeer_ ){
		dropTargetPeer_->setDropTarget( this );
	}
	else {
		throw InvalidPeer( MAKE_ERROR_MSG_2("Unable to create DropTarget peer") );
	}
}

DropTarget::~DropTarget()
{
	if ( NULL != dropTargetPeer_ ){
		delete dropTargetPeer_;
		dropTargetPeer_ = NULL;
	}
}

void DropTarget::handleEvent( Event* event )
{

	if ( NULL != event ){
		unsigned long eventType = event->getType();
		switch ( eventType ){
			case DropTarget::DRAG_ENTERED : {
				DropTargetEntered.fireEvent( event );
			}
			break;

			case DropTarget::DRAG_LEFT : {
				DropTargetLeft.fireEvent( event );
			}
			break;

			case DropTarget::DRAGGING_OVER : {
				DropTargetDraggingOver.fireEvent( event );
			}
			break;

			case DropTarget::DRAG_DROPPED : {
				DropTargetDropped.fireEvent( event );
			}
			break;

			default : {
				Component::handleEvent( event );
			}
			break;
		}
	}
}

DropTargetPeer* DropTarget::getDropTargetPeer()
{
	return this->dropTargetPeer_;
}


Control* DropTarget::getTarget()
{
	Control* result = NULL;
	if ( !targets_.empty() ) {
		result = targets_.front();
	}

	return result;
}


Enumerator<Control*>* DropTarget::getTargets()
{
	return targetContainer_.getEnumerator();
}

void DropTarget::addTargetControl( Control* control )
{
	targets_.push_back( control );
	dropTargetPeer_->registerTarget( control );
}

void DropTarget::removeTargetControl( Control* control )
{
	std::vector<Control*>::iterator found = std::find( targets_.begin(), targets_.end(), control );
	if ( found != targets_.end() ) {
		dropTargetPeer_->unregisterTarget( control );
		targets_.erase( found );
	}
}


/**
*CVS Log info
*$Log$
*Revision 1.2  2004/08/07 02:49:08  ddiego
*merged in the devmain-0-6-5 branch to stable
*
*Revision 1.1.2.2  2004/04/29 03:43:13  marcelloptr
*reformatting of source files: macros and csvlog and copyright sections
*
*Revision 1.1.2.1  2004/04/28 00:28:16  ddiego
*migration towards new directory structure
*
*Revision 1.11  2003/12/18 05:16:00  ddiego
*merge from devmain-0-6-2 branch into the stable branch
*
*Revision 1.10.2.3  2003/12/13 15:56:08  ddiego
**** empty log message ***
*
*Revision 1.10.2.2  2003/09/22 01:48:04  ddiego
*some minor additions ot teh DropTarget to allow it to have multiple
*control targets
*also a few other misc fixes
*
*Revision 1.10.2.1  2003/09/02 02:11:13  ddiego
*fixed some glitches in drag drop. also cleaned up the drag drop event
*classes. Began some fixes to the html browser implementation on Win32
*
*Revision 1.10  2003/08/09 02:56:45  ddiego
*merge over from the devmain-0-6-1 branch
*Changes
*Features:
*-Added additional implementation to better support the MVC architecture in
*the VCF
*
*-Added a Document/View architecure that is similar to MFC's or NextSteps's
*Doc/View architectures
*
*-Integrated the Anti Grain Graphics library into the GraphicsKit. There is
*now basic support for it in terms of drawing vector shapes
*(fills and strokes). Image support will come in the next release
*
*-Added several documented graphics tutorials
*
*Bugfixes:
*
*[ 775744 ] wrong buttons on a dialog
*[ 585239 ] Painting weirdness in a modal dialog ?
*[ 585238 ] Modal dialog which makes a modal Dialog
*[ 509004 ] Opening a modal Dialog causes flicker
*[ 524878 ] onDropped not called for MLTcontrol
*
*Plus an issue with some focus and getting the right popup window to activate
*has also been fixed
*
*Revision 1.9.2.1  2003/07/24 04:10:44  ddiego
*added fixes for the following tasks:
*Task #82279 ApplicationKit: add static methods to singleton objects
*Task #82277 FoundationKit: add static methods to singleton objects
*this required a bunch of changes in terms of getting rid of older style code
*
*Revision 1.9  2003/05/17 20:37:18  ddiego
*this is the checkin for the 0.6.1 release - represents the merge over from
*the devmain-0-6-0 branch plus a few minor bug fixes
*
*Revision 1.8.2.2  2003/03/23 03:23:54  marcelloptr
*3 empty lines at the end of the files
*
*Revision 1.8.2.1  2003/03/12 03:11:55  ddiego
*switched all member variable that used the "m_"<name> prefix to
* <name>"_" suffix nameing standard.
*Also changed all vcf builder files to accomadate this.
*Changes were made to the Stream classes to NOT multiple inheritance and to
*be a little more correct. Changes include breaking the FileStream into two
*distinct classes, one for input and one for output.
*
*Revision 1.8  2003/02/26 04:30:45  ddiego
*merge of code in the devmain-0-5-9 branch into the current tree.
*most additions are in the area of the current linux port, but the major
*addition to this release is the addition of a Condition class (currently
*still under development) and the change over to using the Delegate class
*exclusively from the older event handler macros.
*
*Revision 1.7.20.2  2003/02/24 05:42:18  ddiego
*moved the code for the VariantData calss into it's own header
*migrated to the new event style using Delegates instead of relying on
*the ugly macros that we were using before - same functionality though
*made sure everything still works and compiles, including neccessary
*changes in the VCF Builder so that it creates code in the new style
*This changes to teh new style of using Delegates completes task 58837
*
*Revision 1.7.20.1  2003/01/08 00:19:49  marcelloptr
*mispellings and newlines at the end of all source files
*
*Revision 1.7  2002/01/24 01:46:49  ddiego
*added a cvs "log" comment to the top of all files in vcf/src and vcf/include
*to facilitate change tracking
*
*/


