#ifndef _VCF_SCROLLEVENT_H__
#define _VCF_SCROLLEVENT_H__
//ScrollEvent.h

/*
Copyright 2000-2004 The VCF Project.
Please see License.txt in the top level directory
where you installed the VCF.
*/


#if _MSC_VER > 1000
#   pragma once
#endif


/* Generated by Together */



namespace VCF{
/**
\class ScrollEvent ScrollEvent.h "vcf/ApplicationKit/ScrollEvent.h"
*/
class APPLICATIONKIT_API ScrollEvent : public VCF::Event {
public:
    ScrollEvent( Object* source, const unsigned long& eventType ) : Event(source,eventType) {}

	ScrollEvent( const ScrollEvent& rhs ):Event(rhs) {
		*this = rhs;
	}

	ScrollEvent& operator=( const ScrollEvent& rhs ) {
		Event::operator =( rhs );
		scrollPt_ = rhs.scrollPt_;

		return *this;
	}
    Point getScrollPoint() const {
        return scrollPt_;
    }

    void setScrollPoint( const Point& pt ) {
        scrollPt_ = pt;
    }

	virtual Object* clone( bool deep=false ) {
		return new ScrollEvent(*this);
	}
protected:
    Point scrollPt_;
};



template <class SOURCE_TYPE>
class ScrollEventHandler : public EventHandlerInstance<SOURCE_TYPE,ScrollEvent> {
public:
	ScrollEventHandler( SOURCE_TYPE* source,
		_typename_ EventHandlerInstance<SOURCE_TYPE,ScrollEvent>::OnEventHandlerMethod handlerMethod,
		const String& handlerName="") :
			EventHandlerInstance<SOURCE_TYPE,ScrollEvent>( source, handlerMethod, handlerName ) {

	}

};






};


#endif // _VCF_SCROLLEVENT_H__

/**
$Id$
*/
